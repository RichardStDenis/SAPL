// Recursive selection sort
// Dominik Hansen, David Schneider, Michael Leuschel,
// Using B and ProB for data validation projects,
// ABZ 2016,
// LNCS 9675, 167-182, 2016.
MACHINE Sorting
DEFINITIONS
  SET_PREF_MAX_OPERATIONS == 1;
  SET_PREF_MAX_INITIALISATIONS == 1;
  SET_PREF_SMT == FALSE;
  SET_PREF_SYMBOLIC == FALSE;
  SET_PREF_TIME_OUT == 100000000;
  "LibraryIo.def"

CONSTANTS A, sortedA
ABSTRACT_CONSTANTS Recursive_sort
PROPERTIES
  A = {428, 475, 166, 247, 399} &
  //A = {417, 498, 40, 231, 159, 459, 36, 52, 329, 25} &
  //A = {500, 409, 186, 292, 479, 442, 101, 151, 71, 90, 32, 21, 42, 366, 114} &
  //A = {323, 322, 15, 295, 23, 47, 38, 38, 136, 347, 95, 25, 432, 197, 97,
  //     287, 401, 432, 223, 46} &
  //A = {46, 256, 20, 429, 30, 18, 230, 398, 342, 166, 295, 37, 483, 73, 488,
  //     475, 125, 257, 329, 364, 7, 251, 44, 218, 73} &
  //A = {162, 180, 274, 195, 464, 20, 296, 422, 81, 489, 293, 226, 216, 321, 95,
  //    318, 177, 21, 314, 265, 377, 111, 14, 69, 14, 350, 168, 433, 173, 416} &
  //A = {291, 403, 322, 364, 145, 99, 25, 8, 460, 47, 44, 140, 244, 32, 71,
  //     153, 179, 97, 121, 228, 211, 26, 85, 171, 104, 417, 320, 278, 298, 186,
  //     296, 266, 458, 400, 66} &
  //A = {359, 88, 402, 160, 463, 112, 229, 56, 164, 356, 406, 340, 245, 196, 397,
  //     219, 312, 281, 97, 65, 465, 101, 2, 59, 194, 72, 453, 411, 327, 360,
  //    318, 376, 219, 462, 66, 340, 296, 35, 21, 27 } &
  //A = {183, 290, 348, 177, 494, 21, 310, 485, 76, 122, 370, 453, 205, 45, 464,
  //     320, 50, 168, 249, 275, 390, 442, 315, 278, 384, 172, 482, 255, 116, 304,
  //     81, 39, 386, 184, 423, 233, 342, 224, 440, 202, 307, 475, 138, 325, 331} &
  //A = {141, 487, 215, 171, 473, 203, 66, 380, 377, 113, 9, 371, 136, 94, 288,
  //     466, 367, 411, 176, 80, 285, 336, 70, 331, 21, 154, 109, 162, 490, 141,
  //     298, 444, 236, 165, 96, 348, 473, 418, 227, 481, 389, 353, 460, 311, 196,
  //     158, 215, 427, 42, 64} &
  Recursive_sort : POW(INTEGER) <-> POW(INTEGER*INTEGER) &
  Recursive_sort = %a_.(a_ : POW(INTEGER) & a_ = {} | []) \/
                   %a_.(a_ : POW(INTEGER) & a_ /= {} | min(a_) -> Recursive_sort(a_\{min(a_)})) &
  sortedA = Recursive_sort(A)
OPERATIONS
  DisplayArrays = BEGIN PRINT(A); PRINT(sortedA) END END